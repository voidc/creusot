module Type
  use Ref
  use mach.int.Int
  use prelude.Int8
  use prelude.Int16
  use mach.int.Int32
  use mach.int.Int64
  use prelude.UInt8
  use prelude.UInt16
  use mach.int.UInt32
  use mach.int.UInt64
  use string.Char
  use floating_point.Single
  use floating_point.Double
  use seq.Seq
  use prelude.Prelude
  type c11arraytypes_usesarray  =
    | C11ArrayTypes_UsesArray (rust_array int64)
    
  let function c11arraytypes_usesarray_UsesArray_0 (self : c11arraytypes_usesarray) : rust_array int64 =
    match (self) with
      | C11ArrayTypes_UsesArray a -> a
      end
end
module C11ArrayTypes_Omg_Interface
  use prelude.Prelude
  use seq.Seq
  use mach.int.Int
  use mach.int.Int32
  use mach.int.UInt64
  use Type
  val omg [@cfg:stackify] (x : Type.c11arraytypes_usesarray) : ()
    requires {[#"../11_array_types.rs" 7 11 7 57] Seq.length (Prelude.id (Type.c11arraytypes_usesarray_UsesArray_0 x)) > 0 && Seq.length (Prelude.id (Type.c11arraytypes_usesarray_UsesArray_0 x)) < 18446744073709551615}
    
end
module C11ArrayTypes_Omg
  use prelude.Prelude
  use seq.Seq
  use mach.int.Int
  use mach.int.Int32
  use mach.int.UInt64
  use Type
  use mach.int.Int64
  let rec cfg omg [@cfg:stackify] [#"../11_array_types.rs" 8 0 8 28] (x : Type.c11arraytypes_usesarray) : ()
    requires {[#"../11_array_types.rs" 7 11 7 57] Seq.length (Prelude.id (Type.c11arraytypes_usesarray_UsesArray_0 x)) > 0 && Seq.length (Prelude.id (Type.c11arraytypes_usesarray_UsesArray_0 x)) < 18446744073709551615}
    
   =
  var _0 : ();
  var x_1 : Type.c11arraytypes_usesarray;
  var _3 : usize;
  var _4 : usize;
  var _5 : bool;
  var _6 : ();
  {
    x_1 <- x;
    goto BB0
  }
  BB0 {
    _3 <- (0 : usize);
    _4 <- UInt64.of_int (Seq.length (Type.c11arraytypes_usesarray_UsesArray_0 x_1));
    _5 <- ([#"../11_array_types.rs" 9 4 9 10] _3 < _4);
    assert { _5 };
    goto BB1
  }
  BB1 {
    x_1 <- (let Type.C11ArrayTypes_UsesArray a = x_1 in Type.C11ArrayTypes_UsesArray (Seq.set (Type.c11arraytypes_usesarray_UsesArray_0 x_1) (UInt64.to_int _3) (5 : int64)));
    assert { [#"../11_array_types.rs" 11 20 11 35] Int64.to_int (Seq.get (Prelude.id (Type.c11arraytypes_usesarray_UsesArray_0 x_1)) 0) = 5 };
    _6 <- ();
    _0 <- ();
    return _0
  }
  
end
