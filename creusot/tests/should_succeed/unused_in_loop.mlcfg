module Type
  use Ref
  use mach.int.Int
  use prelude.Int8
  use prelude.Int16
  use mach.int.Int32
  use mach.int.Int64
  use prelude.UInt8
  use prelude.UInt16
  use mach.int.UInt32
  use mach.int.UInt64
  use string.Char
  use floating_point.Single
  use floating_point.Double
  use seq.Seq
  use prelude.Prelude
end
module UnusedInLoop_UnusedInLoop_Interface
  use mach.int.Int
  use mach.int.UInt32
  val unused_in_loop [@cfg:stackify] (b : bool) : uint32
    ensures { [#"../unused_in_loop.rs" 4 10 4 25] result = (10 : uint32) }
    
end
module UnusedInLoop_UnusedInLoop
  use mach.int.Int
  use mach.int.UInt32
  let rec cfg unused_in_loop [@cfg:stackify] [#"../unused_in_loop.rs" 5 0 5 37] (b : bool) : uint32
    ensures { [#"../unused_in_loop.rs" 4 10 4 25] result = (10 : uint32) }
    
   =
  var _0 : uint32;
  var b_1 : bool;
  var x_3 : uint32;
  var _4 : ();
  var _6 : ();
  var _7 : bool;
  var _8 : ();
  {
    b_1 <- b;
    goto BB0
  }
  BB0 {
    x_3 <- (10 : uint32);
    goto BB1
  }
  BB1 {
    invariant x { [#"../unused_in_loop.rs" 7 19 7 23] true };
    _7 <- b_1;
    switch (_7)
      | False -> goto BB3
      | True -> goto BB2
      end
  }
  BB2 {
    _4 <- ();
    _0 <- x_3;
    return _0
  }
  BB3 {
    _6 <- ();
    goto BB1
  }
  
end
