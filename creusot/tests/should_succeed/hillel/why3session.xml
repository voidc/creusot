<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="Z3" version="4.8.17" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="1" name="Alt-Ergo" version="2.4.1" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="2" name="Z3" version="4.11.0" timelimit="5" steplimit="0" memlimit="1000"/>
<file format="mlcfg" proved="true">
<path name=".."/><path name="hillel.mlcfg"/>
<theory name="Hillel_RightPad" proved="true">
 <goal name="right_pad&#39;vc" expl="VC for right_pad" proved="true">
 <proof prover="1"><result status="valid" time="0.18" steps="1538"/></proof>
 </goal>
</theory>
<theory name="Hillel_LeftPad" proved="true">
 <goal name="left_pad&#39;vc" expl="VC for left_pad" proved="true">
 <proof prover="1"><result status="valid" time="0.18" steps="4170"/></proof>
 </goal>
</theory>
<theory name="Hillel_SubsetPush_Impl" proved="true">
 <goal name="subset_push&#39;vc" expl="VC for subset_push" proved="true">
 <proof prover="1"><result status="valid" time="0.15" steps="8297"/></proof>
 </goal>
</theory>
<theory name="Hillel_InsertUnique" proved="true">
 <goal name="insert_unique&#39;vc" expl="VC for insert_unique" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="insert_unique&#39;vc.0" expl="assertion" proved="true">
  <proof prover="1"><result status="valid" time="0.00" steps="7"/></proof>
  </goal>
  <goal name="insert_unique&#39;vc.1" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.00" steps="12"/></proof>
  </goal>
  <goal name="insert_unique&#39;vc.2" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.00" steps="14"/></proof>
  </goal>
  <goal name="insert_unique&#39;vc.3" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.00" steps="16"/></proof>
  </goal>
  <goal name="insert_unique&#39;vc.4" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="22"/></proof>
  </goal>
  <goal name="insert_unique&#39;vc.5" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.00" steps="20"/></proof>
  </goal>
  <goal name="insert_unique&#39;vc.6" expl="assertion" proved="true">
  <proof prover="1"><result status="valid" time="0.04" steps="639"/></proof>
  </goal>
  <goal name="insert_unique&#39;vc.7" expl="assertion" proved="true">
  <proof prover="1"><result status="valid" time="0.04" steps="1350"/></proof>
  </goal>
  <goal name="insert_unique&#39;vc.8" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="44"/></proof>
  </goal>
  <goal name="insert_unique&#39;vc.9" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="52"/></proof>
  </goal>
  <goal name="insert_unique&#39;vc.10" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="223"/></proof>
  </goal>
  <goal name="insert_unique&#39;vc.11" expl="assertion" proved="true">
  <proof prover="1"><result status="valid" time="0.05" steps="713"/></proof>
  </goal>
  <goal name="insert_unique&#39;vc.12" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="insert_unique&#39;vc.12.0" expl="postcondition" proved="true">
   <proof prover="1"><result status="valid" time="0.16" steps="1867"/></proof>
   </goal>
   <goal name="insert_unique&#39;vc.12.1" expl="postcondition" proved="true">
   <proof prover="1"><result status="valid" time="0.12" steps="55"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="insert_unique&#39;vc.13" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="insert_unique&#39;vc.13.0" expl="postcondition" proved="true">
   <proof prover="0"><result status="valid" time="0.06" steps="137155"/></proof>
   </goal>
   <goal name="insert_unique&#39;vc.13.1" expl="postcondition" proved="true">
   <proof prover="1"><result status="valid" time="0.03" steps="325"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="insert_unique&#39;vc.14" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="insert_unique&#39;vc.14.0" expl="postcondition" proved="true">
   <proof prover="1"><result status="valid" time="0.06" steps="597"/></proof>
   </goal>
   <goal name="insert_unique&#39;vc.14.1" expl="postcondition" proved="true">
   <proof prover="1"><result status="valid" time="0.02" steps="57"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="insert_unique&#39;vc.15" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="insert_unique&#39;vc.15.0" expl="postcondition" proved="true">
   <proof prover="1"><result status="valid" time="0.05" steps="238"/></proof>
   </goal>
   <goal name="insert_unique&#39;vc.15.1" expl="postcondition" proved="true">
   <proof prover="1"><result status="valid" time="0.02" steps="58"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Hillel_Unique" proved="true">
 <goal name="unique&#39;vc" expl="VC for unique" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="unique&#39;vc.0" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.00" steps="7"/></proof>
  </goal>
  <goal name="unique&#39;vc.1" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.00" steps="13"/></proof>
  </goal>
  <goal name="unique&#39;vc.2" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="23"/></proof>
  </goal>
  <goal name="unique&#39;vc.3" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="51"/></proof>
  </goal>
  <goal name="unique&#39;vc.4" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="55"/></proof>
  </goal>
  <goal name="unique&#39;vc.5" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="68"/></proof>
  </goal>
  <goal name="unique&#39;vc.6" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="23"/></proof>
  </goal>
  <goal name="unique&#39;vc.7" expl="assertion" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="180"/></proof>
  </goal>
  <goal name="unique&#39;vc.8" expl="assertion" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="338"/></proof>
  </goal>
  <goal name="unique&#39;vc.9" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="32"/></proof>
  </goal>
  <goal name="unique&#39;vc.10" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="32"/></proof>
  </goal>
  <goal name="unique&#39;vc.11" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="47"/></proof>
  </goal>
  <goal name="unique&#39;vc.12" expl="integer overflow" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="56"/></proof>
  </goal>
  <goal name="unique&#39;vc.13" expl="assertion" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="246"/></proof>
  </goal>
  <goal name="unique&#39;vc.14" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="70"/></proof>
  </goal>
  <goal name="unique&#39;vc.15" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="58"/></proof>
  </goal>
  <goal name="unique&#39;vc.16" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="92"/></proof>
  </goal>
  <goal name="unique&#39;vc.17" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="96"/></proof>
  </goal>
  <goal name="unique&#39;vc.18" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.11" steps="2118"/></proof>
  </goal>
  <goal name="unique&#39;vc.19" expl="loop invariant preservation" proved="true">
  <transf name="remove" proved="true" arg1="zero,one,(-),(&gt;),(&lt;=),(&gt;=),abs,int64&#39;maxInt,int64&#39;minInt,min_int64,max_int64,to_int,in_bounds,uint64&#39;maxInt,uint64&#39;minInt,max_uint64,length,radix,min_unsigned,in_bounds1,singleton,cons,snoc,(++),range_end,mAX&#39;,resolve5,completed,invariant&#39;,produces_trans,produces_refl,into_iter_pre,shallow_model,is_unique,resolve1,new,Assoc1,Unit_def_l,Unit_def_r,Inv_def_l,Inv_def_r,Comm1,Assoc,Mul_distr_l,Mul_distr_r,Comm,Unitary,NonTrivialRing,Refl,Trans,Antisymm,Total,ZeroLessOne,CompatOrderAdd,CompatOrderMult,Abs_le,Abs_pos,Div_mod,Div_bound,Mod_bound,Div_sign_pos,Div_sign_neg,Mod_sign_pos,Mod_sign_neg,Rounds_toward_zero,Div_1,Mod_1,Div_inf,Mod_inf,Div_mult,Mod_mult,to_int_in_bounds,extensionality,to_int_in_bounds1,extensionality1,zero_unsigned_is_zero,length_nonnegative,(==)&#39;spec,create&#39;spec,empty&#39;def,set&#39;spec,set&#39;def,([&lt;-])&#39;def,singleton&#39;spec,cons&#39;spec,snoc&#39;spec,([..])&#39;def,([_..])&#39;def,([.._])&#39;def,(++)&#39;spec,some_0&#39;def,shallow_model_spec,deep_model_spec1,produces_trans_spec,produces_refl_spec,Ensures20,Ensures19,Ensures17,type_invariant1,structural1,unique1,unique_subset2,Ensures16,Assume5,Ensures15,Ensures14,Ensures10,Assume4,Assume2,Assume1,Ensures6,Ensures4,Ensures2,Ensures1,Ensures,Assume,type_invariant,unique,unique_subset">
   <goal name="unique&#39;vc.19.0" expl="loop invariant preservation" proved="true">
   <proof prover="1"><result status="valid" time="0.03" steps="423"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Hillel_SumRange_Impl" proved="true">
 <goal name="sum_range&#39;vc" expl="VC for sum_range" proved="true">
 <proof prover="1"><result status="valid" time="0.02" steps="43"/></proof>
 </goal>
</theory>
<theory name="Hillel_SumRangeSplit_Impl" proved="true">
 <goal name="sum_range_split&#39;vc" expl="VC for sum_range_split" proved="true">
 <proof prover="1"><result status="valid" time="0.02" steps="99"/></proof>
 </goal>
</theory>
<theory name="Hillel_Score_Impl" proved="true">
 <goal name="score&#39;vc" expl="VC for score" proved="true">
 <proof prover="2"><result status="valid" time="0.02" steps="74318"/></proof>
 </goal>
</theory>
<theory name="Hillel_Fulcrum" proved="true">
 <goal name="fulcrum&#39;vc" expl="VC for fulcrum" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="fulcrum&#39;vc.0" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="8"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.1" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="10"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.2" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="15"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.3" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="46"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.4" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="23"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.5" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.00" steps="20"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.6" expl="assertion" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="237"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.7" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="26"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.8" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="32"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.9" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.05" steps="50"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.10" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="105"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.11" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="58"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.12" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="59"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.13" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="65"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.14" expl="loop invariant init" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="81"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.15" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="47"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.16" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.04" steps="83"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.17" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.04" steps="395"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.18" expl="integer overflow" proved="true">
  <proof prover="1"><result status="valid" time="0.04" steps="112"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.19" expl="integer overflow" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="92"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.20" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="fulcrum&#39;vc.20.0" expl="assertion" proved="true">
   <proof prover="1"><result status="valid" time="0.05" steps="688"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="fulcrum&#39;vc.21" expl="integer overflow" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="fulcrum&#39;vc.21.0" expl="integer overflow" proved="true">
   <proof prover="0"><result status="valid" time="0.06" steps="160924"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="fulcrum&#39;vc.22" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.02" steps="54"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.23" expl="loop invariant preservation" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="fulcrum&#39;vc.23.0" expl="loop invariant preservation" proved="true">
   <proof prover="1"><result status="valid" time="0.02" steps="157"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="fulcrum&#39;vc.24" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.13" steps="415680"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.25" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.12" steps="351151"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.26" expl="loop invariant preservation" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="fulcrum&#39;vc.26.0" expl="loop invariant preservation" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="fulcrum&#39;vc.26.0.0" expl="loop invariant preservation" proved="true">
    <proof prover="1"><result status="valid" time="0.12" steps="877"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="fulcrum&#39;vc.26.1" expl="loop invariant preservation" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="fulcrum&#39;vc.26.1.0" expl="loop invariant preservation" proved="true">
    <proof prover="1"><result status="valid" time="0.03" steps="232"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="fulcrum&#39;vc.27" expl="loop invariant preservation" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="fulcrum&#39;vc.27.0" expl="loop invariant preservation" proved="true">
   <proof prover="0"><result status="valid" time="0.20" steps="927161"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="fulcrum&#39;vc.28" expl="loop invariant preservation" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="fulcrum&#39;vc.28.0" expl="loop invariant preservation" proved="true">
   <proof prover="0"><result status="valid" time="0.47" steps="2195117"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="fulcrum&#39;vc.29" expl="integer overflow" proved="true">
  <proof prover="0"><result status="valid" time="0.08" steps="229437"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.30" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.03" steps="30"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.31" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.01" steps="57"/></proof>
  </goal>
  <goal name="fulcrum&#39;vc.32" expl="loop invariant preservation" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="fulcrum&#39;vc.32.0" expl="loop invariant preservation" proved="true">
   <proof prover="0"><result status="valid" time="0.10" steps="223801"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="fulcrum&#39;vc.33" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.09" steps="199722"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
