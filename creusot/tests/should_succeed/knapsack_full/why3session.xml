<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="Z3" version="4.12.1" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="1" name="Alt-Ergo" version="2.4.1" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="4" name="CVC5" version="1.0.4" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="5" name="Alt-Ergo" version="2.4.2" timelimit="1" steplimit="0" memlimit="1000"/>
<file format="mlcfg" proved="true">
<path name=".."/><path name="knapsack_full.mlcfg"/>
<theory name="KnapsackFull_Max" proved="true">
 <goal name="max&#39;vc" expl="VC for max" proved="true">
 <proof prover="1"><result status="valid" time="0.02" steps="60"/></proof>
 </goal>
</theory>
<theory name="KnapsackFull_SumWeights_Impl" proved="true">
 <goal name="sum_weights&#39;vc" expl="VC for sum_weights" proved="true">
 <proof prover="1"><result status="valid" time="0.01" steps="33"/></proof>
 </goal>
</theory>
<theory name="KnapsackFull_SumValues_Impl" proved="true">
 <goal name="sum_values&#39;vc" expl="VC for sum_values" proved="true">
 <proof prover="1"><result status="valid" time="0.01" steps="12"/></proof>
 </goal>
</theory>
<theory name="KnapsackFull_SubseqRev_Impl" proved="true">
 <goal name="subseq_rev&#39;vc" expl="VC for subseq_rev" proved="true">
 <proof prover="1"><result status="valid" time="0.01" steps="27"/></proof>
 </goal>
</theory>
<theory name="KnapsackFull_M_Impl" proved="true">
 <goal name="m&#39;vc" expl="VC for m" proved="true">
 <proof prover="1"><result status="valid" time="0.32" steps="7528"/></proof>
 </goal>
</theory>
<theory name="KnapsackFull_Knapsack01Dyn" proved="true">
 <goal name="knapsack01_dyn&#39;vc" expl="VC for knapsack01_dyn" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="knapsack01_dyn&#39;vc.0" expl="integer overflow" proved="true">
  <proof prover="5"><result status="valid" time="0.01" steps="11"/></proof>
  </goal>
  <goal name="knapsack01_dyn&#39;vc.1" expl="integer overflow" proved="true">
  <proof prover="5"><result status="valid" time="0.01" steps="38"/></proof>
  </goal>
  <goal name="knapsack01_dyn&#39;vc.2" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.01" steps="25"/></proof>
  </goal>
  <goal name="knapsack01_dyn&#39;vc.3" expl="loop invariant init" proved="true">
  <proof prover="5"><result status="valid" time="0.01" steps="29"/></proof>
  </goal>
  <goal name="knapsack01_dyn&#39;vc.4" expl="loop invariant init" proved="true">
  <proof prover="5"><result status="valid" time="0.01" steps="53"/></proof>
  </goal>
  <goal name="knapsack01_dyn&#39;vc.5" expl="loop invariant init" proved="true">
  <proof prover="5"><result status="valid" time="0.01" steps="30"/></proof>
  </goal>
  <goal name="knapsack01_dyn&#39;vc.6" expl="loop invariant init" proved="true">
  <proof prover="5"><result status="valid" time="0.01" steps="59"/></proof>
  </goal>
  <goal name="knapsack01_dyn&#39;vc.7" expl="loop invariant init" proved="true">
  <proof prover="5"><result status="valid" time="0.02" steps="221"/></proof>
  </goal>
  <goal name="knapsack01_dyn&#39;vc.8" expl="loop invariant init" proved="true">
  <proof prover="5"><result status="valid" time="0.01" steps="128"/></proof>
  </goal>
  <goal name="knapsack01_dyn&#39;vc.9" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.01" steps="38"/></proof>
  </goal>
  <goal name="knapsack01_dyn&#39;vc.10" expl="loop invariant init" proved="true">
  <proof prover="5"><result status="valid" time="0.01" steps="49"/></proof>
  </goal>
  <goal name="knapsack01_dyn&#39;vc.11" expl="loop invariant init" proved="true">
  <proof prover="5"><result status="valid" time="0.01" steps="50"/></proof>
  </goal>
  <goal name="knapsack01_dyn&#39;vc.12" expl="loop invariant init" proved="true">
  <proof prover="5"><result status="valid" time="0.01" steps="52"/></proof>
  </goal>
  <goal name="knapsack01_dyn&#39;vc.13" expl="loop invariant init" proved="true">
  <proof prover="5"><result status="valid" time="0.01" steps="54"/></proof>
  </goal>
  <goal name="knapsack01_dyn&#39;vc.14" expl="loop invariant init" proved="true">
  <proof prover="5"><result status="valid" time="0.01" steps="52"/></proof>
  </goal>
  <goal name="knapsack01_dyn&#39;vc.15" expl="postcondition" proved="true">
  <proof prover="5"><result status="valid" time="0.03" steps="568"/></proof>
  </goal>
  <goal name="knapsack01_dyn&#39;vc.16" expl="postcondition" proved="true">
  <proof prover="5"><result status="valid" time="0.43" steps="1894"/></proof>
  </goal>
  <goal name="knapsack01_dyn&#39;vc.17" expl="postcondition" proved="true">
  <proof prover="5"><result status="valid" time="0.53" steps="1993"/></proof>
  </goal>
  <goal name="knapsack01_dyn&#39;vc.18" expl="integer overflow" proved="true">
  <proof prover="5"><result status="valid" time="0.01" steps="99"/></proof>
  </goal>
  <goal name="knapsack01_dyn&#39;vc.19" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.01" steps="54"/></proof>
  </goal>
  <goal name="knapsack01_dyn&#39;vc.20" expl="integer overflow" proved="true">
  <proof prover="5"><result status="valid" time="0.01" steps="114"/></proof>
  </goal>
  <goal name="knapsack01_dyn&#39;vc.21" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.01" steps="61"/></proof>
  </goal>
  <goal name="knapsack01_dyn&#39;vc.22" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.02" steps="139"/></proof>
  </goal>
  <goal name="knapsack01_dyn&#39;vc.23" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.01" steps="64"/></proof>
  </goal>
  <goal name="knapsack01_dyn&#39;vc.24" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.02" steps="151"/></proof>
  </goal>
  <goal name="knapsack01_dyn&#39;vc.25" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.21" steps="35173"/></proof>
  </goal>
  <goal name="knapsack01_dyn&#39;vc.26" expl="loop invariant preservation" proved="true">
  <proof prover="5"><result status="valid" time="0.01" steps="105"/></proof>
  </goal>
  <goal name="knapsack01_dyn&#39;vc.27" expl="loop invariant preservation" proved="true">
  <proof prover="5"><result status="valid" time="0.03" steps="460"/></proof>
  </goal>
  <goal name="knapsack01_dyn&#39;vc.28" expl="loop invariant preservation" proved="true">
  <proof prover="5"><result status="valid" time="1.40" steps="13984"/></proof>
  </goal>
  <goal name="knapsack01_dyn&#39;vc.29" expl="loop invariant preservation" proved="true">
  <proof prover="5"><result status="valid" time="1.30" steps="11011"/></proof>
  </goal>
  <goal name="knapsack01_dyn&#39;vc.30" expl="loop invariant preservation" proved="true">
  <proof prover="5"><result status="valid" time="0.81" steps="7109"/></proof>
  </goal>
  <goal name="knapsack01_dyn&#39;vc.31" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.02" steps="274"/></proof>
  </goal>
  <goal name="knapsack01_dyn&#39;vc.32" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.01" steps="51"/></proof>
  </goal>
  <goal name="knapsack01_dyn&#39;vc.33" expl="loop invariant init" proved="true">
  <proof prover="5"><result status="valid" time="0.01" steps="52"/></proof>
  </goal>
  <goal name="knapsack01_dyn&#39;vc.34" expl="loop invariant init" proved="true">
  <proof prover="5"><result status="valid" time="0.01" steps="97"/></proof>
  </goal>
  <goal name="knapsack01_dyn&#39;vc.35" expl="loop invariant init" proved="true">
  <proof prover="5"><result status="valid" time="0.01" steps="52"/></proof>
  </goal>
  <goal name="knapsack01_dyn&#39;vc.36" expl="loop invariant init" proved="true">
  <proof prover="5"><result status="valid" time="0.01" steps="103"/></proof>
  </goal>
  <goal name="knapsack01_dyn&#39;vc.37" expl="loop invariant init" proved="true">
  <proof prover="5"><result status="valid" time="0.03" steps="384"/></proof>
  </goal>
  <goal name="knapsack01_dyn&#39;vc.38" expl="loop invariant init" proved="true">
  <proof prover="5"><result status="valid" time="0.02" steps="123"/></proof>
  </goal>
  <goal name="knapsack01_dyn&#39;vc.39" expl="loop invariant init" proved="true">
  <proof prover="5"><result status="valid" time="0.01" steps="109"/></proof>
  </goal>
  <goal name="knapsack01_dyn&#39;vc.40" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.01" steps="62"/></proof>
  </goal>
  <goal name="knapsack01_dyn&#39;vc.41" expl="loop invariant preservation" proved="true">
  <proof prover="5"><result status="valid" time="0.01" steps="63"/></proof>
  </goal>
  <goal name="knapsack01_dyn&#39;vc.42" expl="loop invariant preservation" proved="true">
  <proof prover="5"><result status="valid" time="0.01" steps="118"/></proof>
  </goal>
  <goal name="knapsack01_dyn&#39;vc.43" expl="loop invariant preservation" proved="true">
  <proof prover="5"><result status="valid" time="0.01" steps="64"/></proof>
  </goal>
  <goal name="knapsack01_dyn&#39;vc.44" expl="loop invariant preservation" proved="true">
  <proof prover="5"><result status="valid" time="0.02" steps="117"/></proof>
  </goal>
  <goal name="knapsack01_dyn&#39;vc.45" expl="loop invariant preservation" proved="true">
  <proof prover="5"><result status="valid" time="0.16" steps="3012"/></proof>
  </goal>
  <goal name="knapsack01_dyn&#39;vc.46" expl="loop invariant preservation" proved="true">
  <proof prover="5"><result status="valid" time="0.02" steps="124"/></proof>
  </goal>
  <goal name="knapsack01_dyn&#39;vc.47" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.05" steps="746"/></proof>
  </goal>
  <goal name="knapsack01_dyn&#39;vc.48" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.10" steps="1598"/></proof>
  </goal>
  <goal name="knapsack01_dyn&#39;vc.49" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.05" steps="774"/></proof>
  </goal>
  <goal name="knapsack01_dyn&#39;vc.50" expl="integer overflow" proved="true">
  <proof prover="5"><result status="valid" time="0.02" steps="218"/></proof>
  </goal>
  <goal name="knapsack01_dyn&#39;vc.51" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.14" steps="2424"/></proof>
  </goal>
  <goal name="knapsack01_dyn&#39;vc.52" expl="integer overflow" proved="true">
  <transf name="remove" proved="true" arg1="zero,one,(-),(&gt;),(&lt;=),(&gt;=),abs,min,max,int64&#39;maxInt,int64&#39;minInt,min_int64,max_int64,to_int,in_bounds3,uint64&#39;minInt,max_uint64,length1,radix,min_unsigned,( *_),(^_),singleton,cons,snoc,(++),id,item_weight,item_value,range_start,resolve9,mAX&#39;,shallow_model8,resolve_elswhere1,shallow_model6,resolve_elswhere,shallow_model4,in_bounds2,in_bounds1,completed1,range_inclusive_len,invariant&#39;1,produces_trans1,produces_refl1,into_iter_pre1,in_bounds,resolve8,resolve7,completed,invariant&#39;,produces_trans,produces_refl,into_iter_pre,resolve5,resolve4,resolve3,resolve2,shallow_model,resolve1,Assoc1,Unit_def_l,Unit_def_r,Inv_def_l,Inv_def_r,Comm1,Assoc,Mul_distr_l,Mul_distr_r,Comm,Unitary,NonTrivialRing,Refl,Trans,Antisymm,Total,ZeroLessOne,CompatOrderAdd,CompatOrderMult,Abs_le,Abs_pos,Min_r,Max_l,Min_comm,Max_comm,Min_assoc,Max_assoc,Div_mod,Div_bound,Mod_bound,Div_sign_pos,Div_sign_neg,Mod_sign_pos,Mod_sign_neg,Rounds_toward_zero,Mod_1,Div_inf,Mod_inf,Div_mult,Mod_mult,to_int_in_bounds,extensionality,extensionality1,zero_unsigned_is_zero,length_nonnegative,(==)&#39;spec,create&#39;spec,empty&#39;def,set&#39;spec,set&#39;def,([&lt;-])&#39;def,singleton&#39;spec,cons&#39;spec,snoc&#39;spec,([..])&#39;spec,([..])&#39;def,([_..])&#39;def,([.._])&#39;def,(++)&#39;spec,shallow_model_spec3,shallow_model_spec2,shallow_model_spec1,produces_trans_spec1,produces_refl_spec1,produces_trans_spec,produces_refl_spec,shallow_model_spec,def3,sum_values_spec,def2,sum_weights_spec,def1,subseq_rev_spec,def,m_spec,Requires1,Ensures36,Ensures35,Ensures34,Ensures33,Ensures32,Ensures31,Ensures30,Ensures27,type_invariant1,items_len,weight_len,best_value,best_value_bounds1,Ensures25,Assume2,Ensures21,Ensures20,Ensures19,Assume1,Ensures17,Ensures15,Ensures13,type_invariant,items_len2,weight_len2,best_value21,best_value2,Ensures11,Assume,Ensures7,Ensures6,Ensures5,H,Ensures4,Ensures3">
   <goal name="knapsack01_dyn&#39;vc.52.0" expl="integer overflow" proved="true">
   <proof prover="5"><result status="valid" time="0.04" steps="619"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="knapsack01_dyn&#39;vc.53" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.04" steps="746"/></proof>
  </goal>
  <goal name="knapsack01_dyn&#39;vc.54" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.09" steps="1604"/></proof>
  </goal>
  <goal name="knapsack01_dyn&#39;vc.55" expl="integer overflow" proved="true">
  <proof prover="5"><result status="valid" time="0.04" steps="508"/></proof>
  </goal>
  <goal name="knapsack01_dyn&#39;vc.56" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.04" steps="494"/></proof>
  </goal>
  <goal name="knapsack01_dyn&#39;vc.57" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.22" steps="39599"/></proof>
  </goal>
  <goal name="knapsack01_dyn&#39;vc.58" expl="loop invariant preservation" proved="true">
  <proof prover="5"><result status="valid" time="0.02" steps="84"/></proof>
  </goal>
  <goal name="knapsack01_dyn&#39;vc.59" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.13" steps="25377"/></proof>
  </goal>
  <goal name="knapsack01_dyn&#39;vc.60" expl="loop invariant preservation" proved="true">
  <proof prover="5"><result status="valid" time="0.02" steps="175"/></proof>
  </goal>
  <goal name="knapsack01_dyn&#39;vc.61" expl="loop invariant preservation" proved="true">
  <proof prover="5"><result status="valid" time="0.05" steps="745"/></proof>
  </goal>
  <goal name="knapsack01_dyn&#39;vc.62" expl="loop invariant preservation" proved="true">
  <proof prover="5"><result status="valid" time="0.08" steps="1327"/></proof>
  </goal>
  <goal name="knapsack01_dyn&#39;vc.63" expl="loop invariant preservation" proved="true">
  <transf name="remove" proved="true" arg1="zero,one,(-),(&gt;),(&lt;=),(&gt;=),abs,min,max,int64&#39;maxInt,int64&#39;minInt,min_int64,max_int64,to_int,in_bounds3,uint64&#39;maxInt,uint64&#39;minInt,max_uint64,length1,radix,min_unsigned,in_bounds4,singleton,cons,snoc,(++),id,item_weight,item_value,range_start,resolve9,mAX&#39;,shallow_model8,resolve_elswhere,in_bounds2,in_bounds1,completed1,invariant&#39;1,produces_trans1,produces_refl1,into_iter_pre1,in_bounds,resolve8,resolve7,completed,invariant&#39;,produces_trans,produces_refl,into_iter_pre,resolve5,resolve2,shallow_model,resolve1,Assoc1,Unit_def_l,Unit_def_r,Inv_def_l,Inv_def_r,Comm1,Assoc,Mul_distr_l,Mul_distr_r,Comm,Unitary,NonTrivialRing,Refl,Trans,Antisymm,Total,ZeroLessOne,CompatOrderAdd,CompatOrderMult,Abs_le,Abs_pos,Min_r,Max_l,Min_comm,Max_comm,Min_assoc,Max_assoc,Div_mod,Div_bound,Mod_bound,Div_sign_pos,Div_sign_neg,Mod_sign_pos,Mod_sign_neg,Rounds_toward_zero,Div_1,Mod_1,Div_inf,Mod_inf,Div_mult,Mod_mult,to_int_in_bounds,extensionality,to_int_in_bounds1,extensionality1,zero_unsigned_is_zero,length_nonnegative,(==)&#39;spec,create&#39;spec,empty&#39;def,set&#39;spec,set&#39;def,([&lt;-])&#39;def,singleton&#39;spec,cons&#39;spec,snoc&#39;spec,([..])&#39;spec,([..])&#39;def,([_..])&#39;def,([.._])&#39;def,(++)&#39;spec,shallow_model_spec3,shallow_model_spec2,shallow_model_spec1,range_inclusive_len_spec,produces_trans_spec1,produces_refl_spec1,produces_trans_spec,produces_refl_spec,shallow_model_spec,def3,sum_values_spec,def2,sum_weights_spec,def1,subseq_rev_spec,m_spec,Requires2,Requires1,Requires,Ensures36,Ensures35,Ensures34,Ensures33,Ensures32,Ensures31,Ensures30,Ensures27,type_invariant2,items_len,weight_len,best_value,best_value_bounds1,Ensures25,Assume4,Ensures21,Ensures20,Ensures19,Assume3,Ensures15,Ensures13,type_invariant1,items_len21,weight_len21,best_value_bounds,Ensures11,Assume2,Ensures8,Ensures7,Ensures1,type_invariant,structural,best_value2">
   <goal name="knapsack01_dyn&#39;vc.63.0" expl="loop invariant preservation" proved="true">
   <proof prover="0"><result status="valid" time="0.03" steps="306162"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="knapsack01_dyn&#39;vc.64" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.08" steps="469682"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
