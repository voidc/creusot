
module NonZero_NonZeroU32_Type
  use prelude.Int
  use prelude.UInt32
  type t_nonzerou32  =
    | C_NonZeroU32 uint32
    
  let function nonzerou32_0 (self : t_nonzerou32) : uint32 = [@vc:do_not_keep_trace] [@vc:sp]
    match (self) with
      | C_NonZeroU32 a -> a
      end
end
module NonZero_Impl0_Invariant_Stub
  use NonZero_NonZeroU32_Type as NonZero_NonZeroU32_Type
  predicate invariant' [#"../non_zero.rs" 9 4 9 30] (self : NonZero_NonZeroU32_Type.t_nonzerou32)
end
module NonZero_Impl0_Invariant_Interface
  use NonZero_NonZeroU32_Type as NonZero_NonZeroU32_Type
  predicate invariant' [#"../non_zero.rs" 9 4 9 30] (self : NonZero_NonZeroU32_Type.t_nonzerou32)
end
module NonZero_Impl0_Invariant
  use prelude.UInt32
  use prelude.Int
  use NonZero_NonZeroU32_Type as NonZero_NonZeroU32_Type
  predicate invariant' [#"../non_zero.rs" 9 4 9 30] (self : NonZero_NonZeroU32_Type.t_nonzerou32) =
    [#"../non_zero.rs" 10 20 10 31] UInt32.to_int (NonZero_NonZeroU32_Type.nonzerou32_0 self) > 0
  val invariant' [#"../non_zero.rs" 9 4 9 30] (self : NonZero_NonZeroU32_Type.t_nonzerou32) : bool
    ensures { result = invariant' self }
    
end
module NonZero_Impl1_New_Interface
  use prelude.UInt32
  use prelude.Int
  use NonZero_NonZeroU32_Type as NonZero_NonZeroU32_Type
  clone NonZero_Impl0_Invariant_Stub as Invariant0
  val new [#"../non_zero.rs" 16 4 16 30] (n : uint32) : NonZero_NonZeroU32_Type.t_nonzerou32
    requires {[#"../non_zero.rs" 15 15 15 21] UInt32.to_int n > 0}
    ensures { [#"../non_zero.rs" 16 4 16 30] Invariant0.invariant' result }
    
end
module NonZero_Impl1_New
  use prelude.Int
  use prelude.UInt32
  use NonZero_NonZeroU32_Type as NonZero_NonZeroU32_Type
  clone NonZero_Impl0_Invariant as Invariant0
  let rec cfg new [#"../non_zero.rs" 16 4 16 30] [@cfg:stackify] [@cfg:subregion_analysis] (n : uint32) : NonZero_NonZeroU32_Type.t_nonzerou32
    requires {[#"../non_zero.rs" 15 15 15 21] UInt32.to_int n > 0}
    ensures { [#"../non_zero.rs" 16 4 16 30] Invariant0.invariant' result }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : NonZero_NonZeroU32_Type.t_nonzerou32;
  var n_1 : uint32;
  var _3 : uint32;
  {
    n_1 <- n;
    goto BB0
  }
  BB0 {
    _3 <- n_1;
    _0 <- NonZero_NonZeroU32_Type.C_NonZeroU32 _3;
    return _0
  }
  
end
module Core_Num_Impl9_Max_Stub
  use prelude.Int
  use prelude.UInt32
  val constant mAX'  : uint32
end
module Core_Num_Impl9_Max
  use prelude.Int
  use prelude.UInt32
  let constant mAX'  : uint32 = [@vc:do_not_keep_trace] [@vc:sp]
    (4294967295 : uint32)
end
module NonZero_Impl1_Add_Interface
  use prelude.UInt32
  use prelude.Int
  use NonZero_NonZeroU32_Type as NonZero_NonZeroU32_Type
  clone NonZero_Impl0_Invariant_Stub as Invariant0
  clone Core_Num_Impl9_Max_Stub as Max0
  val add [#"../non_zero.rs" 21 4 21 39] (self : NonZero_NonZeroU32_Type.t_nonzerou32) (rhs : NonZero_NonZeroU32_Type.t_nonzerou32) : NonZero_NonZeroU32_Type.t_nonzerou32
    requires {[#"../non_zero.rs" 20 15 20 44] UInt32.to_int (NonZero_NonZeroU32_Type.nonzerou32_0 self) + UInt32.to_int (NonZero_NonZeroU32_Type.nonzerou32_0 rhs) <= UInt32.to_int Max0.mAX'}
    requires {[#"../non_zero.rs" 21 15 21 19] Invariant0.invariant' self}
    requires {[#"../non_zero.rs" 21 21 21 24] Invariant0.invariant' rhs}
    ensures { [#"../non_zero.rs" 21 4 21 39] Invariant0.invariant' result }
    
end
module NonZero_Impl1_Add
  use prelude.Int
  use prelude.UInt32
  use NonZero_NonZeroU32_Type as NonZero_NonZeroU32_Type
  clone NonZero_Impl0_Invariant as Invariant0
  clone Core_Num_Impl9_Max as Max0
  let rec cfg add [#"../non_zero.rs" 21 4 21 39] [@cfg:stackify] [@cfg:subregion_analysis] (self : NonZero_NonZeroU32_Type.t_nonzerou32) (rhs : NonZero_NonZeroU32_Type.t_nonzerou32) : NonZero_NonZeroU32_Type.t_nonzerou32
    requires {[#"../non_zero.rs" 20 15 20 44] UInt32.to_int (NonZero_NonZeroU32_Type.nonzerou32_0 self) + UInt32.to_int (NonZero_NonZeroU32_Type.nonzerou32_0 rhs) <= UInt32.to_int Max0.mAX'}
    requires {[#"../non_zero.rs" 21 15 21 19] Invariant0.invariant' self}
    requires {[#"../non_zero.rs" 21 21 21 24] Invariant0.invariant' rhs}
    ensures { [#"../non_zero.rs" 21 4 21 39] Invariant0.invariant' result }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : NonZero_NonZeroU32_Type.t_nonzerou32;
  var self_1 : NonZero_NonZeroU32_Type.t_nonzerou32;
  var rhs_2 : NonZero_NonZeroU32_Type.t_nonzerou32;
  var _4 : uint32;
  var _5 : uint32;
  var _6 : uint32;
  {
    self_1 <- self;
    rhs_2 <- rhs;
    goto BB0
  }
  BB0 {
    _5 <- NonZero_NonZeroU32_Type.nonzerou32_0 self_1;
    _6 <- NonZero_NonZeroU32_Type.nonzerou32_0 rhs_2;
    _4 <- ([#"../non_zero.rs" 22 13 22 27] _5 + _6);
    _0 <- NonZero_NonZeroU32_Type.C_NonZeroU32 _4;
    return _0
  }
  
end
module NonZero_Impl1_SubPre_Stub
  use NonZero_NonZeroU32_Type as NonZero_NonZeroU32_Type
  clone NonZero_Impl0_Invariant_Stub as Invariant0
  predicate sub_pre [#"../non_zero.rs" 26 4 26 43] (self : NonZero_NonZeroU32_Type.t_nonzerou32) (rhs : NonZero_NonZeroU32_Type.t_nonzerou32)
    
end
module NonZero_Impl1_SubPre_Interface
  use NonZero_NonZeroU32_Type as NonZero_NonZeroU32_Type
  clone NonZero_Impl0_Invariant_Stub as Invariant0
  predicate sub_pre [#"../non_zero.rs" 26 4 26 43] (self : NonZero_NonZeroU32_Type.t_nonzerou32) (rhs : NonZero_NonZeroU32_Type.t_nonzerou32)
    
  axiom sub_pre_spec : forall self : NonZero_NonZeroU32_Type.t_nonzerou32, rhs : NonZero_NonZeroU32_Type.t_nonzerou32 . ([#"../non_zero.rs" 26 19 26 23] Invariant0.invariant' self) -> ([#"../non_zero.rs" 26 25 26 28] Invariant0.invariant' rhs) -> true
end
module NonZero_Impl1_SubPre
  use prelude.UInt32
  use prelude.Int
  use NonZero_NonZeroU32_Type as NonZero_NonZeroU32_Type
  clone NonZero_Impl0_Invariant_Stub as Invariant0
  predicate sub_pre [#"../non_zero.rs" 26 4 26 43] (self : NonZero_NonZeroU32_Type.t_nonzerou32) (rhs : NonZero_NonZeroU32_Type.t_nonzerou32)
    
   =
    [#"../non_zero.rs" 27 20 27 36] UInt32.to_int (NonZero_NonZeroU32_Type.nonzerou32_0 self) > UInt32.to_int (NonZero_NonZeroU32_Type.nonzerou32_0 rhs)
  val sub_pre [#"../non_zero.rs" 26 4 26 43] (self : NonZero_NonZeroU32_Type.t_nonzerou32) (rhs : NonZero_NonZeroU32_Type.t_nonzerou32) : bool
    requires {[#"../non_zero.rs" 26 19 26 23] Invariant0.invariant' self}
    requires {[#"../non_zero.rs" 26 25 26 28] Invariant0.invariant' rhs}
    ensures { result = sub_pre self rhs }
    
  axiom sub_pre_spec : forall self : NonZero_NonZeroU32_Type.t_nonzerou32, rhs : NonZero_NonZeroU32_Type.t_nonzerou32 . ([#"../non_zero.rs" 26 19 26 23] Invariant0.invariant' self) -> ([#"../non_zero.rs" 26 25 26 28] Invariant0.invariant' rhs) -> true
end
module NonZero_Impl1_SubPre_Impl
  use prelude.UInt32
  use prelude.Int
  use NonZero_NonZeroU32_Type as NonZero_NonZeroU32_Type
  clone NonZero_Impl0_Invariant as Invariant0
  let rec ghost predicate sub_pre [#"../non_zero.rs" 26 4 26 43] (self : NonZero_NonZeroU32_Type.t_nonzerou32) (rhs : NonZero_NonZeroU32_Type.t_nonzerou32)
    requires {[#"../non_zero.rs" 26 19 26 23] Invariant0.invariant' self}
    requires {[#"../non_zero.rs" 26 25 26 28] Invariant0.invariant' rhs}
    
   = [@vc:do_not_keep_trace] [@vc:sp]
    [#"../non_zero.rs" 27 20 27 36] UInt32.to_int (NonZero_NonZeroU32_Type.nonzerou32_0 self) > UInt32.to_int (NonZero_NonZeroU32_Type.nonzerou32_0 rhs)
end
module NonZero_Impl1_SubPreTrans_Stub
  use NonZero_NonZeroU32_Type as NonZero_NonZeroU32_Type
  clone NonZero_Impl0_Invariant_Stub as Invariant0
  clone NonZero_Impl1_SubPre_Stub as SubPre0 with
    predicate Invariant0.invariant' = Invariant0.invariant',
    axiom .
  function sub_pre_trans [#"../non_zero.rs" 34 4 34 51] (a : NonZero_NonZeroU32_Type.t_nonzerou32) (b : NonZero_NonZeroU32_Type.t_nonzerou32) (c : NonZero_NonZeroU32_Type.t_nonzerou32) : ()
    
end
module NonZero_Impl1_SubPreTrans_Interface
  use NonZero_NonZeroU32_Type as NonZero_NonZeroU32_Type
  clone NonZero_Impl0_Invariant_Stub as Invariant0
  clone NonZero_Impl1_SubPre_Stub as SubPre0 with
    predicate Invariant0.invariant' = Invariant0.invariant',
    axiom .
  function sub_pre_trans [#"../non_zero.rs" 34 4 34 51] (a : NonZero_NonZeroU32_Type.t_nonzerou32) (b : NonZero_NonZeroU32_Type.t_nonzerou32) (c : NonZero_NonZeroU32_Type.t_nonzerou32) : ()
    
  axiom sub_pre_trans_spec : forall a : NonZero_NonZeroU32_Type.t_nonzerou32, b : NonZero_NonZeroU32_Type.t_nonzerou32, c : NonZero_NonZeroU32_Type.t_nonzerou32 . ([#"../non_zero.rs" 31 15 31 27] SubPre0.sub_pre a b) -> ([#"../non_zero.rs" 32 15 32 27] SubPre0.sub_pre b c) -> ([#"../non_zero.rs" 34 25 34 26] Invariant0.invariant' a) -> ([#"../non_zero.rs" 34 34 34 35] Invariant0.invariant' b) -> ([#"../non_zero.rs" 34 43 34 44] Invariant0.invariant' c) -> ([#"../non_zero.rs" 33 14 33 26] SubPre0.sub_pre a c)
end
module NonZero_Impl1_SubPreTrans
  use NonZero_NonZeroU32_Type as NonZero_NonZeroU32_Type
  clone NonZero_Impl0_Invariant_Stub as Invariant0
  clone NonZero_Impl1_SubPre_Stub as SubPre0 with
    predicate Invariant0.invariant' = Invariant0.invariant',
    axiom .
  function sub_pre_trans [#"../non_zero.rs" 34 4 34 51] (a : NonZero_NonZeroU32_Type.t_nonzerou32) (b : NonZero_NonZeroU32_Type.t_nonzerou32) (c : NonZero_NonZeroU32_Type.t_nonzerou32) : ()
    
   =
    [#"../non_zero.rs" 30 4 30 10] ()
  val sub_pre_trans [#"../non_zero.rs" 34 4 34 51] (a : NonZero_NonZeroU32_Type.t_nonzerou32) (b : NonZero_NonZeroU32_Type.t_nonzerou32) (c : NonZero_NonZeroU32_Type.t_nonzerou32) : ()
    requires {[#"../non_zero.rs" 31 15 31 27] SubPre0.sub_pre a b}
    requires {[#"../non_zero.rs" 32 15 32 27] SubPre0.sub_pre b c}
    requires {[#"../non_zero.rs" 34 25 34 26] Invariant0.invariant' a}
    requires {[#"../non_zero.rs" 34 34 34 35] Invariant0.invariant' b}
    requires {[#"../non_zero.rs" 34 43 34 44] Invariant0.invariant' c}
    ensures { result = sub_pre_trans a b c }
    
  axiom sub_pre_trans_spec : forall a : NonZero_NonZeroU32_Type.t_nonzerou32, b : NonZero_NonZeroU32_Type.t_nonzerou32, c : NonZero_NonZeroU32_Type.t_nonzerou32 . ([#"../non_zero.rs" 31 15 31 27] SubPre0.sub_pre a b) -> ([#"../non_zero.rs" 32 15 32 27] SubPre0.sub_pre b c) -> ([#"../non_zero.rs" 34 25 34 26] Invariant0.invariant' a) -> ([#"../non_zero.rs" 34 34 34 35] Invariant0.invariant' b) -> ([#"../non_zero.rs" 34 43 34 44] Invariant0.invariant' c) -> ([#"../non_zero.rs" 33 14 33 26] SubPre0.sub_pre a c)
end
module NonZero_Impl1_SubPreTrans_Impl
  use NonZero_NonZeroU32_Type as NonZero_NonZeroU32_Type
  clone NonZero_Impl0_Invariant as Invariant0
  clone NonZero_Impl1_SubPre as SubPre0 with
    predicate Invariant0.invariant' = Invariant0.invariant',
    axiom .
  let rec ghost function sub_pre_trans [#"../non_zero.rs" 34 4 34 51] (a : NonZero_NonZeroU32_Type.t_nonzerou32) (b : NonZero_NonZeroU32_Type.t_nonzerou32) (c : NonZero_NonZeroU32_Type.t_nonzerou32) : ()
    requires {[#"../non_zero.rs" 31 15 31 27] SubPre0.sub_pre a b}
    requires {[#"../non_zero.rs" 32 15 32 27] SubPre0.sub_pre b c}
    requires {[#"../non_zero.rs" 34 25 34 26] Invariant0.invariant' a}
    requires {[#"../non_zero.rs" 34 34 34 35] Invariant0.invariant' b}
    requires {[#"../non_zero.rs" 34 43 34 44] Invariant0.invariant' c}
    ensures { [#"../non_zero.rs" 33 14 33 26] SubPre0.sub_pre a c }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
    [#"../non_zero.rs" 30 4 30 10] ()
end
module NonZero_Impl1_Sub_Interface
  use NonZero_NonZeroU32_Type as NonZero_NonZeroU32_Type
  clone NonZero_Impl0_Invariant_Stub as Invariant0
  clone NonZero_Impl1_SubPre_Stub as SubPre0 with
    predicate Invariant0.invariant' = Invariant0.invariant',
    axiom .
  val sub [#"../non_zero.rs" 37 4 37 39] (self : NonZero_NonZeroU32_Type.t_nonzerou32) (rhs : NonZero_NonZeroU32_Type.t_nonzerou32) : NonZero_NonZeroU32_Type.t_nonzerou32
    requires {[#"../non_zero.rs" 36 15 36 32] SubPre0.sub_pre self rhs}
    requires {[#"../non_zero.rs" 37 15 37 19] Invariant0.invariant' self}
    requires {[#"../non_zero.rs" 37 21 37 24] Invariant0.invariant' rhs}
    ensures { [#"../non_zero.rs" 37 4 37 39] Invariant0.invariant' result }
    
end
module NonZero_Impl1_Sub
  use prelude.Int
  use prelude.UInt32
  use NonZero_NonZeroU32_Type as NonZero_NonZeroU32_Type
  clone NonZero_Impl0_Invariant as Invariant0
  clone NonZero_Impl1_SubPre as SubPre0 with
    predicate Invariant0.invariant' = Invariant0.invariant',
    axiom .
  let rec cfg sub [#"../non_zero.rs" 37 4 37 39] [@cfg:stackify] [@cfg:subregion_analysis] (self : NonZero_NonZeroU32_Type.t_nonzerou32) (rhs : NonZero_NonZeroU32_Type.t_nonzerou32) : NonZero_NonZeroU32_Type.t_nonzerou32
    requires {[#"../non_zero.rs" 36 15 36 32] SubPre0.sub_pre self rhs}
    requires {[#"../non_zero.rs" 37 15 37 19] Invariant0.invariant' self}
    requires {[#"../non_zero.rs" 37 21 37 24] Invariant0.invariant' rhs}
    ensures { [#"../non_zero.rs" 37 4 37 39] Invariant0.invariant' result }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : NonZero_NonZeroU32_Type.t_nonzerou32;
  var self_1 : NonZero_NonZeroU32_Type.t_nonzerou32;
  var rhs_2 : NonZero_NonZeroU32_Type.t_nonzerou32;
  var _4 : uint32;
  var _5 : uint32;
  var _6 : uint32;
  {
    self_1 <- self;
    rhs_2 <- rhs;
    goto BB0
  }
  BB0 {
    _5 <- NonZero_NonZeroU32_Type.nonzerou32_0 self_1;
    _6 <- NonZero_NonZeroU32_Type.nonzerou32_0 rhs_2;
    _4 <- ([#"../non_zero.rs" 38 13 38 27] _5 - _6);
    _0 <- NonZero_NonZeroU32_Type.C_NonZeroU32 _4;
    return _0
  }
  
end
module NonZero_Impl0
  
end
