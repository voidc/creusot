module Type
  use Ref
  use mach.int.Int
  use prelude.Int8
  use prelude.Int16
  use mach.int.Int32
  use mach.int.Int64
  use prelude.UInt8
  use prelude.UInt16
  use mach.int.UInt32
  use mach.int.UInt64
  use string.Char
  use floating_point.Single
  use floating_point.Double
  use seq.Seq
  use prelude.Prelude
end
module UnaryOp_F_Interface
  val f [@cfg:stackify] (_ : ()) : ()
end
module UnaryOp_F
  let rec cfg f [@cfg:stackify] [#"../unary_op.rs" 4 0 4 10] (_ : ()) : () =
  var _0 : ();
  var _1 : ();
  var _2 : bool;
  var _3 : bool;
  var _4 : ();
  {
    goto BB0
  }
  BB0 {
    _3 <- not false;
    _2 <- not _3;
    switch (_2)
      | False -> goto BB2
      | True -> goto BB1
      end
  }
  BB1 {
    absurd
  }
  BB2 {
    _1 <- ();
    _0 <- ();
    return _0
  }
  
end
